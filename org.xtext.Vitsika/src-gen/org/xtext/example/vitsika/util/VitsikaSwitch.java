/**
 * generated by Xtext 2.32.0
 */
package org.xtext.example.vitsika.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.xtext.example.vitsika.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.xtext.example.vitsika.VitsikaPackage
 * @generated
 */
public class VitsikaSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static VitsikaPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VitsikaSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = VitsikaPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case VitsikaPackage.MODEL:
      {
        Model model = (Model)theEObject;
        T result = caseModel(model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case VitsikaPackage.ATAOVY_TASK:
      {
        AtaovyTask ataovyTask = (AtaovyTask)theEObject;
        T result = caseAtaovyTask(ataovyTask);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case VitsikaPackage.ACTION:
      {
        Action action = (Action)theEObject;
        T result = caseAction(action);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case VitsikaPackage.CLICK_ACTION:
      {
        ClickAction clickAction = (ClickAction)theEObject;
        T result = caseClickAction(clickAction);
        if (result == null) result = caseAction(clickAction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case VitsikaPackage.MOVE_ACTION:
      {
        MoveAction moveAction = (MoveAction)theEObject;
        T result = caseMoveAction(moveAction);
        if (result == null) result = caseAction(moveAction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case VitsikaPackage.WAIT_ACTION:
      {
        WaitAction waitAction = (WaitAction)theEObject;
        T result = caseWaitAction(waitAction);
        if (result == null) result = caseAction(waitAction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case VitsikaPackage.OPEN_APPLICATION_ACTION:
      {
        OpenApplicationAction openApplicationAction = (OpenApplicationAction)theEObject;
        T result = caseOpenApplicationAction(openApplicationAction);
        if (result == null) result = caseAction(openApplicationAction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case VitsikaPackage.MATY:
      {
        Maty maty = (Maty)theEObject;
        T result = caseMaty(maty);
        if (result == null) result = caseAction(maty);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case VitsikaPackage.SURFER:
      {
        Surfer surfer = (Surfer)theEObject;
        T result = caseSurfer(surfer);
        if (result == null) result = caseAction(surfer);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case VitsikaPackage.WIFI_CREATE:
      {
        WifiCreate wifiCreate = (WifiCreate)theEObject;
        T result = caseWifiCreate(wifiCreate);
        if (result == null) result = caseAction(wifiCreate);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case VitsikaPackage.TYPEWRITE:
      {
        Typewrite typewrite = (Typewrite)theEObject;
        T result = caseTypewrite(typewrite);
        if (result == null) result = caseAction(typewrite);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case VitsikaPackage.WORD_TYPING_AUTO:
      {
        WordTypingAuto wordTypingAuto = (WordTypingAuto)theEObject;
        T result = caseWordTypingAuto(wordTypingAuto);
        if (result == null) result = caseAction(wordTypingAuto);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModel(Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Ataovy Task</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Ataovy Task</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAtaovyTask(AtaovyTask object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAction(Action object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Click Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Click Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseClickAction(ClickAction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Move Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Move Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMoveAction(MoveAction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Wait Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Wait Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWaitAction(WaitAction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Open Application Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Open Application Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOpenApplicationAction(OpenApplicationAction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Maty</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Maty</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMaty(Maty object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Surfer</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Surfer</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSurfer(Surfer object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Wifi Create</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Wifi Create</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWifiCreate(WifiCreate object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Typewrite</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Typewrite</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTypewrite(Typewrite object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Word Typing Auto</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Word Typing Auto</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWordTypingAuto(WordTypingAuto object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //VitsikaSwitch
