/*
 * generated by Xtext 2.32.0
 */
package org.xtext.example.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class VitsikaGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.Vitsika.Model");
		private final Assignment cTaskAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cTaskAtaovyTaskParserRuleCall_0 = (RuleCall)cTaskAssignment.eContents().get(0);
		
		//Model:
		//  task=AtaovyTask;
		@Override public ParserRule getRule() { return rule; }
		
		//task=AtaovyTask
		public Assignment getTaskAssignment() { return cTaskAssignment; }
		
		//AtaovyTask
		public RuleCall getTaskAtaovyTaskParserRuleCall_0() { return cTaskAtaovyTaskParserRuleCall_0; }
	}
	public class AtaovyTaskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.Vitsika.AtaovyTask");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAtaovyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cActionsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cActionsActionParserRuleCall_2_0 = (RuleCall)cActionsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cActionsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cActionsActionParserRuleCall_3_1_0 = (RuleCall)cActionsAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//AtaovyTask:
		//  'Ataovy' '{'
		//    actions+=Action (',' actions+=Action)*
		//  '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Ataovy' '{'
		//  actions+=Action (',' actions+=Action)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Ataovy'
		public Keyword getAtaovyKeyword_0() { return cAtaovyKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//actions+=Action
		public Assignment getActionsAssignment_2() { return cActionsAssignment_2; }
		
		//Action
		public RuleCall getActionsActionParserRuleCall_2_0() { return cActionsActionParserRuleCall_2_0; }
		
		//(',' actions+=Action)*
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//actions+=Action
		public Assignment getActionsAssignment_3_1() { return cActionsAssignment_3_1; }
		
		//Action
		public RuleCall getActionsActionParserRuleCall_3_1_0() { return cActionsActionParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.Vitsika.Action");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cClickActionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMoveActionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cWaitActionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cOpenApplicationActionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cMatyParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cSurferParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cWifiCreateParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cTypewriteParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cWordTypingAutoParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		
		//Action:
		//    ClickAction | MoveAction | WaitAction | OpenApplicationAction | Maty | Surfer
		//    | WifiCreate | Typewrite | WordTypingAuto
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ClickAction | MoveAction | WaitAction | OpenApplicationAction | Maty | Surfer
		//| WifiCreate | Typewrite | WordTypingAuto
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ClickAction
		public RuleCall getClickActionParserRuleCall_0() { return cClickActionParserRuleCall_0; }
		
		//MoveAction
		public RuleCall getMoveActionParserRuleCall_1() { return cMoveActionParserRuleCall_1; }
		
		//WaitAction
		public RuleCall getWaitActionParserRuleCall_2() { return cWaitActionParserRuleCall_2; }
		
		//OpenApplicationAction
		public RuleCall getOpenApplicationActionParserRuleCall_3() { return cOpenApplicationActionParserRuleCall_3; }
		
		//Maty
		public RuleCall getMatyParserRuleCall_4() { return cMatyParserRuleCall_4; }
		
		//Surfer
		public RuleCall getSurferParserRuleCall_5() { return cSurferParserRuleCall_5; }
		
		//WifiCreate
		public RuleCall getWifiCreateParserRuleCall_6() { return cWifiCreateParserRuleCall_6; }
		
		//Typewrite
		public RuleCall getTypewriteParserRuleCall_7() { return cTypewriteParserRuleCall_7; }
		
		//WordTypingAuto
		public RuleCall getWordTypingAutoParserRuleCall_8() { return cWordTypingAutoParserRuleCall_8; }
	}
	public class ClickActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.Vitsika.ClickAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTsindrioKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cKeyAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cKeySTRINGTerminalRuleCall_2_0 = (RuleCall)cKeyAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ClickAction:
		//  'tsindrio' '(' key=STRING ')' ;
		@Override public ParserRule getRule() { return rule; }
		
		//'tsindrio' '(' key=STRING ')'
		public Group getGroup() { return cGroup; }
		
		//'tsindrio'
		public Keyword getTsindrioKeyword_0() { return cTsindrioKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//key=STRING
		public Assignment getKeyAssignment_2() { return cKeyAssignment_2; }
		
		//STRING
		public RuleCall getKeySTRINGTerminalRuleCall_2_0() { return cKeySTRINGTerminalRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class MoveActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.Vitsika.MoveAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMikisakaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXINTTerminalRuleCall_2_0 = (RuleCall)cXAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cYAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cYINTTerminalRuleCall_4_0 = (RuleCall)cYAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//MoveAction:
		//  'mikisaka' '('X=INT',' Y=INT')';
		@Override public ParserRule getRule() { return rule; }
		
		//'mikisaka' '('X=INT',' Y=INT')'
		public Group getGroup() { return cGroup; }
		
		//'mikisaka'
		public Keyword getMikisakaKeyword_0() { return cMikisakaKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//X=INT
		public Assignment getXAssignment_2() { return cXAssignment_2; }
		
		//INT
		public RuleCall getXINTTerminalRuleCall_2_0() { return cXINTTerminalRuleCall_2_0; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//Y=INT
		public Assignment getYAssignment_4() { return cYAssignment_4; }
		
		//INT
		public RuleCall getYINTTerminalRuleCall_4_0() { return cYINTTerminalRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class WaitActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.Vitsika.WaitAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMiandryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDurationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDurationINTTerminalRuleCall_2_0 = (RuleCall)cDurationAssignment_2.eContents().get(0);
		private final Assignment cUnitAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Alternatives cUnitAlternatives_3_0 = (Alternatives)cUnitAssignment_3.eContents().get(0);
		private final Keyword cUnitSKeyword_3_0_0 = (Keyword)cUnitAlternatives_3_0.eContents().get(0);
		private final Keyword cUnitMKeyword_3_0_1 = (Keyword)cUnitAlternatives_3_0.eContents().get(1);
		private final Keyword cUnitHKeyword_3_0_2 = (Keyword)cUnitAlternatives_3_0.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//WaitAction:
		//  'miandry' '('duration=INT unit=('s' | 'm' | 'h')')';
		@Override public ParserRule getRule() { return rule; }
		
		//'miandry' '('duration=INT unit=('s' | 'm' | 'h')')'
		public Group getGroup() { return cGroup; }
		
		//'miandry'
		public Keyword getMiandryKeyword_0() { return cMiandryKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//duration=INT
		public Assignment getDurationAssignment_2() { return cDurationAssignment_2; }
		
		//INT
		public RuleCall getDurationINTTerminalRuleCall_2_0() { return cDurationINTTerminalRuleCall_2_0; }
		
		//unit=('s' | 'm' | 'h')
		public Assignment getUnitAssignment_3() { return cUnitAssignment_3; }
		
		//('s' | 'm' | 'h')
		public Alternatives getUnitAlternatives_3_0() { return cUnitAlternatives_3_0; }
		
		//'s'
		public Keyword getUnitSKeyword_3_0_0() { return cUnitSKeyword_3_0_0; }
		
		//'m'
		public Keyword getUnitMKeyword_3_0_1() { return cUnitMKeyword_3_0_1; }
		
		//'h'
		public Keyword getUnitHKeyword_3_0_2() { return cUnitHKeyword_3_0_2; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class OpenApplicationActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.Vitsika.OpenApplicationAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSokafyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cApplicationsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cApplicationsIDTerminalRuleCall_2_0 = (RuleCall)cApplicationsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cApplicationsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cApplicationsIDTerminalRuleCall_3_1_0 = (RuleCall)cApplicationsAssignment_3_1.eContents().get(0);
		
		//OpenApplicationAction:
		//  'sokafy' ':' applications+=ID (',' applications+=ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//'sokafy' ':' applications+=ID (',' applications+=ID)*
		public Group getGroup() { return cGroup; }
		
		//'sokafy'
		public Keyword getSokafyKeyword_0() { return cSokafyKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//applications+=ID
		public Assignment getApplicationsAssignment_2() { return cApplicationsAssignment_2; }
		
		//ID
		public RuleCall getApplicationsIDTerminalRuleCall_2_0() { return cApplicationsIDTerminalRuleCall_2_0; }
		
		//(',' applications+=ID)*
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//applications+=ID
		public Assignment getApplicationsAssignment_3_1() { return cApplicationsAssignment_3_1; }
		
		//ID
		public RuleCall getApplicationsIDTerminalRuleCall_3_1_0() { return cApplicationsIDTerminalRuleCall_3_1_0; }
	}
	public class MatyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.Vitsika.Maty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVonoyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cProcAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cProcSTRINGTerminalRuleCall_2_0 = (RuleCall)cProcAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Maty:
		//  'vonoy' '('proc=STRING ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'vonoy' '('proc=STRING ')'
		public Group getGroup() { return cGroup; }
		
		//'vonoy'
		public Keyword getVonoyKeyword_0() { return cVonoyKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//proc=STRING
		public Assignment getProcAssignment_2() { return cProcAssignment_2; }
		
		//STRING
		public RuleCall getProcSTRINGTerminalRuleCall_2_0() { return cProcSTRINGTerminalRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class SurferElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.Vitsika.Surfer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTranokalaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cUrlAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cUrlSTRINGTerminalRuleCall_2_0 = (RuleCall)cUrlAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Surfer :
		//    'tranokala' '(' url=STRING ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'tranokala' '(' url=STRING ')'
		public Group getGroup() { return cGroup; }
		
		//'tranokala'
		public Keyword getTranokalaKeyword_0() { return cTranokalaKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//url=STRING
		public Assignment getUrlAssignment_2() { return cUrlAssignment_2; }
		
		//STRING
		public RuleCall getUrlSTRINGTerminalRuleCall_2_0() { return cUrlSTRINGTerminalRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class WifiCreateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.Vitsika.WifiCreate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cManokatraWifiKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSsidAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSsidSTRINGTerminalRuleCall_2_0 = (RuleCall)cSsidAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPasswdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPasswdSTRINGTerminalRuleCall_4_0 = (RuleCall)cPasswdAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//WifiCreate:
		//    'manokatraWifi' '(' ssid=STRING ',' passwd=STRING')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'manokatraWifi' '(' ssid=STRING ',' passwd=STRING')'
		public Group getGroup() { return cGroup; }
		
		//'manokatraWifi'
		public Keyword getManokatraWifiKeyword_0() { return cManokatraWifiKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//ssid=STRING
		public Assignment getSsidAssignment_2() { return cSsidAssignment_2; }
		
		//STRING
		public RuleCall getSsidSTRINGTerminalRuleCall_2_0() { return cSsidSTRINGTerminalRuleCall_2_0; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//passwd=STRING
		public Assignment getPasswdAssignment_4() { return cPasswdAssignment_4; }
		
		//STRING
		public RuleCall getPasswdSTRINGTerminalRuleCall_4_0() { return cPasswdSTRINGTerminalRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class TypewriteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.Vitsika.Typewrite");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSoratyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSoratraAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSoratraSTRINGTerminalRuleCall_2_0 = (RuleCall)cSoratraAssignment_2.eContents().get(0);
		
		//Typewrite:
		//    'soraty' ':'soratra=STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'soraty' ':'soratra=STRING
		public Group getGroup() { return cGroup; }
		
		//'soraty'
		public Keyword getSoratyKeyword_0() { return cSoratyKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//soratra=STRING
		public Assignment getSoratraAssignment_2() { return cSoratraAssignment_2; }
		
		//STRING
		public RuleCall getSoratraSTRINGTerminalRuleCall_2_0() { return cSoratraSTRINGTerminalRuleCall_2_0; }
	}
	public class WordTypingAutoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.Vitsika.WordTypingAuto");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cManoratra_wordKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTenyAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTenySTRINGTerminalRuleCall_2_0 = (RuleCall)cTenyAssignment_2.eContents().get(0);
		
		//WordTypingAuto:
		//    'manoratra_word' ':'teny=STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'manoratra_word' ':'teny=STRING
		public Group getGroup() { return cGroup; }
		
		//'manoratra_word'
		public Keyword getManoratra_wordKeyword_0() { return cManoratra_wordKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//teny=STRING
		public Assignment getTenyAssignment_2() { return cTenyAssignment_2; }
		
		//STRING
		public RuleCall getTenySTRINGTerminalRuleCall_2_0() { return cTenySTRINGTerminalRuleCall_2_0; }
	}
	
	
	private final ModelElements pModel;
	private final AtaovyTaskElements pAtaovyTask;
	private final ActionElements pAction;
	private final ClickActionElements pClickAction;
	private final MoveActionElements pMoveAction;
	private final WaitActionElements pWaitAction;
	private final OpenApplicationActionElements pOpenApplicationAction;
	private final MatyElements pMaty;
	private final SurferElements pSurfer;
	private final WifiCreateElements pWifiCreate;
	private final TypewriteElements pTypewrite;
	private final WordTypingAutoElements pWordTypingAuto;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public VitsikaGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pAtaovyTask = new AtaovyTaskElements();
		this.pAction = new ActionElements();
		this.pClickAction = new ClickActionElements();
		this.pMoveAction = new MoveActionElements();
		this.pWaitAction = new WaitActionElements();
		this.pOpenApplicationAction = new OpenApplicationActionElements();
		this.pMaty = new MatyElements();
		this.pSurfer = new SurferElements();
		this.pWifiCreate = new WifiCreateElements();
		this.pTypewrite = new TypewriteElements();
		this.pWordTypingAuto = new WordTypingAutoElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.Vitsika".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//  task=AtaovyTask;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//AtaovyTask:
	//  'Ataovy' '{'
	//    actions+=Action (',' actions+=Action)*
	//  '}';
	public AtaovyTaskElements getAtaovyTaskAccess() {
		return pAtaovyTask;
	}
	
	public ParserRule getAtaovyTaskRule() {
		return getAtaovyTaskAccess().getRule();
	}
	
	//Action:
	//    ClickAction | MoveAction | WaitAction | OpenApplicationAction | Maty | Surfer
	//    | WifiCreate | Typewrite | WordTypingAuto
	//;
	public ActionElements getActionAccess() {
		return pAction;
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}
	
	//ClickAction:
	//  'tsindrio' '(' key=STRING ')' ;
	public ClickActionElements getClickActionAccess() {
		return pClickAction;
	}
	
	public ParserRule getClickActionRule() {
		return getClickActionAccess().getRule();
	}
	
	//MoveAction:
	//  'mikisaka' '('X=INT',' Y=INT')';
	public MoveActionElements getMoveActionAccess() {
		return pMoveAction;
	}
	
	public ParserRule getMoveActionRule() {
		return getMoveActionAccess().getRule();
	}
	
	//WaitAction:
	//  'miandry' '('duration=INT unit=('s' | 'm' | 'h')')';
	public WaitActionElements getWaitActionAccess() {
		return pWaitAction;
	}
	
	public ParserRule getWaitActionRule() {
		return getWaitActionAccess().getRule();
	}
	
	//OpenApplicationAction:
	//  'sokafy' ':' applications+=ID (',' applications+=ID)*;
	public OpenApplicationActionElements getOpenApplicationActionAccess() {
		return pOpenApplicationAction;
	}
	
	public ParserRule getOpenApplicationActionRule() {
		return getOpenApplicationActionAccess().getRule();
	}
	
	//Maty:
	//  'vonoy' '('proc=STRING ')'
	//;
	public MatyElements getMatyAccess() {
		return pMaty;
	}
	
	public ParserRule getMatyRule() {
		return getMatyAccess().getRule();
	}
	
	//Surfer :
	//    'tranokala' '(' url=STRING ')';
	public SurferElements getSurferAccess() {
		return pSurfer;
	}
	
	public ParserRule getSurferRule() {
		return getSurferAccess().getRule();
	}
	
	//WifiCreate:
	//    'manokatraWifi' '(' ssid=STRING ',' passwd=STRING')'
	//;
	public WifiCreateElements getWifiCreateAccess() {
		return pWifiCreate;
	}
	
	public ParserRule getWifiCreateRule() {
		return getWifiCreateAccess().getRule();
	}
	
	//Typewrite:
	//    'soraty' ':'soratra=STRING
	//;
	public TypewriteElements getTypewriteAccess() {
		return pTypewrite;
	}
	
	public ParserRule getTypewriteRule() {
		return getTypewriteAccess().getRule();
	}
	
	//WordTypingAuto:
	//    'manoratra_word' ':'teny=STRING
	//;
	public WordTypingAutoElements getWordTypingAutoAccess() {
		return pWordTypingAuto;
	}
	
	public ParserRule getWordTypingAutoRule() {
		return getWordTypingAutoAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
